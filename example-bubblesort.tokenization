Comment: -  sort the array * 
function function  
function function bubbleSort  
function function bubbleSort (  
function function bubbleSort ( arr  
function function bubbleSort ( arr :  
function function bubbleSort ( arr : integer  
function function bubbleSort ( arr : integer [  
function function bubbleSort ( arr : integer [ 8  
function function bubbleSort ( arr : integer [ 8 ]  
function function bubbleSort ( arr : integer [ 8 ] ,  
function function bubbleSort ( arr : integer [ 8 ] , size  
function function bubbleSort ( arr : integer [ 8 ] , size :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) =>  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void {  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i <  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n -  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) {  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j <  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n -  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i -  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) {  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] >  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j +  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then {  
Comment: -  swap temp and arr[i] 
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j +  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j +  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; }  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j +  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; }  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i +  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; }  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; }  
Comment: -  print the array * 
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] ,  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) =>  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void {  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i <  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) {  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i +  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; }  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; }  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) =>  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void {  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; }  
Comment: -  main funtion to test above 
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) =>  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void {  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr :  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] =  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = -  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( -  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] ,  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] ,  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ; printArray  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ; printArray (  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ; printArray ( arr  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ; printArray ( arr [  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ; printArray ( arr [ 8  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ; printArray ( arr [ 8 ]  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ; printArray ( arr [ 8 ] ,  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ; printArray ( arr [ 8 ] , 8  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ; printArray ( arr [ 8 ] , 8 )  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ; printArray ( arr [ 8 ] , 8 ) ;  
function function bubbleSort ( arr : integer [ 8 ] , size : integer ) => void { localvar n : integer ; localvar i : integer ; localvar j : integer ; localvar temp : integer ; localvar bubble : integer ; bubble = 10 ; n = size ; i = 0 ; j = 0 ; temp = 0 ; while ( i < n - 1 ) { j = 0 ; while ( j < n - i - 1 ) { if ( arr [ j ] > arr [ j + 1 ] ) then { temp temp = arr [ j ] ; arr [ j ] = arr [ j + 1 ] ; arr [ j + 1 ] = temp ; } else ; j = j + 1 ; } ; i = i + 1 ; } ; } function function printArray ( arr : integer [ 8 ] , size : integer ) => void { localvar bubble : integer ; bubble = 10 ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { write ( arr [ i ] ) ; i = i + 1 ; } ; } function checking ( x : integer ) => void { write ( x ) ; } function function main ( ) => void { localvar arr : integer [ 8 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 156 ; arr [ 7 ] = - 1 ; checking ( - 100 ) ; printArray ( arr [ 8 ] , 8 ) ; bubbleSort ( arr [ 8 ] , 8 ) ; printArray ( arr [ 8 ] , 8 ) ; }  
Comment: -     classes    --------------------------------------|X| no class declaration| | class declaration| | multiple class declarations| | no data member declaration| | data member declaration| | multiple data member declaration| | no member function declaration| | member function declaration| | multiple member function declaration| | no member| | no inherited class| | one inherited class| | multiple inherited classes| | private member specifier| | public member specifier    functions: definitions    --------------------------------------| | no main function definition|X| main function definition| | no free function definition|X| free function definition|X| multiple free function definitions|X| no member function definition| | member function definition| | multiple member function definitions|X| return type: void| | return type: integer| | return type: float| | return type: id| | return type: array (not allowed)    functions: formal parameters    --------------------------------------|X| type: integer| | type: float| | type: id|X| type: 1-dim array | | type: n-dim array| | type: array (with size)|X| type: array (without size)    functions: calls    --------------------------------------|X| free function call| | member function call| | parameters:0| | parameters:1|X| parameters:n|X| array parameter - 1-dim| | array parameter - n-dim| | array parameter - with size| | array parameter - without size| | function call as statement| | function call as expression factor| | expression as parameter    variable declaration    --------------------------------------|X| type: integer| | type: float| | type: string| | type: id|X| type: 1-dim array | | type: n-dim array|X| type: array (with size)| | type: array (without size) (not allowed)    function body: local variable declarations    --------------------------------------| | no local variable declarations|X| local variable declarations| | intertwined statements and variable declarations    function body: statements    --------------------------------------| | no statement| | 1 statement|X| n statements|X| if statement|X| if: empty then or else blocks| | if: 1-statement then or else blocks|X| if: n-statements then or else blocks|X| while statement| | while: empty block| | while: 1-statement block|X| while: n-statement block| | read(<variable>) statement|X| write(<expr>) statement|X| return(<expr>) statement|X| assignment statement    variable + idnest    --------------------------------------|X| id| | id.id| | id.id(id)| | id(id).id| | id(id).id()| | id.id[id]| | id[id].id| | id[id].id[id]| | id.id[id][id]| | id[id][id].id| | id[id][id].id[id][id]| | id(id).id[id]| | id(id).id[id][id]| | expression as array index    expressions    --------------------------------------|X| single variable|X| involving addop| | involving multop|X| involving relop| | involving addop + multop|X| involving multop + relop| | involving addop + multop + relop| | involving parentheses| | involving nested parentheses| | involving not| | involving sign|X| involving literals| | involving variable + idnest|X| involving function calls| | involving all the above in one expression* 
