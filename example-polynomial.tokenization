Comment: -  print the array * 
function function  
function function printArray  
function function printArray (  
function function printArray ( arr  
function function printArray ( arr :  
function function printArray ( arr : integer  
function function printArray ( arr : integer [  
function function printArray ( arr : integer [ 7  
function function printArray ( arr : integer [ 7 ]  
function function printArray ( arr : integer [ 7 ] ,  
function function printArray ( arr : integer [ 7 ] , size  
function function printArray ( arr : integer [ 7 ] , size :  
function function printArray ( arr : integer [ 7 ] , size : integer  
function function printArray ( arr : integer [ 7 ] , size : integer )  
function function printArray ( arr : integer [ 7 ] , size : integer ) =>  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void {  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write (  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size )  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write (  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ]  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] )  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n :  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i :  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n =  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i =  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while (  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i <  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n )  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) {  
Comment: -     write(arr[i]); 
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i =  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i +  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; }  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; }  
Comment: -  main funtion to test above 
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main (  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( )  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) =>  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void {  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr :  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ]  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ]  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] =  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ]  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] =  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ]  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] =  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ]  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] =  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ]  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] =  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ]  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] =  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ]  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] =  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write (  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ]  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] )  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ; printArray  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ; printArray (  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ; printArray ( arr  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ; printArray ( arr [  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ; printArray ( arr [ 7  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ; printArray ( arr [ 7 ]  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ; printArray ( arr [ 7 ] ,  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ; printArray ( arr [ 7 ] , 7  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ; printArray ( arr [ 7 ] , 7 )  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ; printArray ( arr [ 7 ] , 7 ) ;  
function function printArray ( arr : integer [ 7 ] , size : integer ) => void { write ( size ) ; write ( arr [ 0 ] ) ; localvar n : integer ; localvar i : integer ; n = size ; i = 0 ; while ( i < n ) { i i = i + 1 ; } ; } function function main ( ) => void { localvar arr : integer [ 7 ] ; arr [ 0 ] = 64 ; arr [ 1 ] = 34 ; arr [ 2 ] = 25 ; arr [ 3 ] = 12 ; arr [ 4 ] = 22 ; arr [ 5 ] = 11 ; arr [ 6 ] = 90 ; write ( arr [ 6 ] ) ; printArray ( arr [ 7 ] , 7 ) ; }  
Comment: -     classes    --------------------------------------|X| no class declaration| | class declaration| | multiple class declarations| | no data member declaration| | data member declaration| | multiple data member declaration| | no member function declaration| | member function declaration| | multiple member function declaration| | no member| | no inherited class| | one inherited class| | multiple inherited classes| | private member specifier| | public member specifier    functions: definitions    --------------------------------------| | no main function definition|X| main function definition| | no free function definition|X| free function definition|X| multiple free function definitions|X| no member function definition| | member function definition| | multiple member function definitions|X| return type: void| | return type: integer| | return type: float| | return type: id| | return type: array (not allowed)    functions: formal parameters    --------------------------------------|X| type: integer| | type: float| | type: id|X| type: 1-dim array | | type: n-dim array| | type: array (with size)|X| type: array (without size)    functions: calls    --------------------------------------|X| free function call| | member function call| | parameters:0| | parameters:1|X| parameters:n|X| array parameter - 1-dim| | array parameter - n-dim| | array parameter - with size| | array parameter - without size| | function call as statement| | function call as expression factor| | expression as parameter    variable declaration    --------------------------------------|X| type: integer| | type: float| | type: string| | type: id|X| type: 1-dim array | | type: n-dim array|X| type: array (with size)| | type: array (without size) (not allowed)    function body: local variable declarations    --------------------------------------| | no local variable declarations|X| local variable declarations| | intertwined statements and variable declarations    function body: statements    --------------------------------------| | no statement| | 1 statement|X| n statements|X| if statement|X| if: empty then or else blocks| | if: 1-statement then or else blocks|X| if: n-statements then or else blocks|X| while statement| | while: empty block| | while: 1-statement block|X| while: n-statement block| | read(<variable>) statement|X| write(<expr>) statement|X| return(<expr>) statement|X| assignment statement    variable + idnest    --------------------------------------|X| id| | id.id| | id.id(id)| | id(id).id| | id(id).id()| | id.id[id]| | id[id].id| | id[id].id[id]| | id.id[id][id]| | id[id][id].id| | id[id][id].id[id][id]| | id(id).id[id]| | id(id).id[id][id]| | expression as array index    expressions    --------------------------------------|X| single variable|X| involving addop| | involving multop|X| involving relop| | involving addop + multop|X| involving multop + relop| | involving addop + multop + relop| | involving parentheses| | involving nested parentheses| | involving not| | involving sign|X| involving literals| | involving variable + idnest|X| involving function calls| | involving all the above in one expression* 
