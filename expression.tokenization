function  
function main  
function main (  
function main ( )  
function main ( ) =>  
function main ( ) => void  
Comment: -  2.1, 2.2 
function main ( ) => void { {  
function main ( ) => void { { localvar  
function main ( ) => void { { localvar arr  
function main ( ) => void { { localvar arr :  
function main ( ) => void { { localvar arr : integer  
function main ( ) => void { { localvar arr : integer [  
function main ( ) => void { { localvar arr : integer [ 7  
function main ( ) => void { { localvar arr : integer [ 7 ]  
function main ( ) => void { { localvar arr : integer [ 7 ] ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter :  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x :  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x =  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ]  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] =  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ]  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] =  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter =  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 +  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + (  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 *  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 )  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) +  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write (  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter )  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter =  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 +  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ]  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] =  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x +  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ]  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] *  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x *  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ]  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] +  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 *  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * (  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x +  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ]  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] +  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x *  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ]  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] )  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter =  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 *  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ]  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] +  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] + 4  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] + 4 ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] + 4 ; write  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] + 4 ; write (  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] + 4 ; write ( arr  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] + 4 ; write ( arr [  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] + 4 ; write ( arr [ 3  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] + 4 ; write ( arr [ 3 ]  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] + 4 ; write ( arr [ 3 ] )  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] + 4 ; write ( arr [ 3 ] ) ;  
function main ( ) => void { { localvar arr : integer [ 7 ] ; localvar counter : integer ; localvar x : integer ; x = 1 ; arr [ 3 ] = 4 ; arr [ 2 ] = 10 ; counter = 1 + ( 2 * 3 ) + 4 ; write ( counter ) ; counter = 1 ; arr [ 2 + 1 ] = arr [ x + 1 ] * arr [ x * 3 ] + 100 * ( arr [ x + 1 ] + arr [ x * 3 ] ) ; counter = arr [ 1 * 3 ] + 4 ; write ( arr [ 3 ] ) ; }  
