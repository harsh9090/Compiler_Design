[class, class, 1], [id, POLYNOMIAL, 1], [Opencubr, {, 1], 
[public, public, 2], [function, function, 2], [id, evaluate, 2], [Colon, :, 2], [Openpar, (, 2], [id, x, 2], [Colon, :, 2], [float, float, 2], [Closepar, ), 2], [arrow, =>, 2], [float, float, 2], [Semi, ;, 2], 
[Closecubr, }, 3], [Semi, ;, 3], 
[function, function, 4], [id, POLYNOMIAL, 4], [sr, ::, 4], [id, evaluate, 4], [Openpar, (, 4], [id, x, 4], [Colon, :, 4], [float, float, 4], [Closepar, ), 4], [arrow, =>, 4], [float, float, 4], [inlinecmt,  2.1, 2.2, 4], 
[Opencubr, {, 5], 
[return, return, 6], [Openpar, (, 6], [floatLit, 0.0, 6], [Closepar, ), 6], [Semi, ;, 6], [inlinecmt,  2.3, 6], 
[Closecubr, }, 7], 
[function, function, 8], [id, main, 8], [Openpar, (, 8], [Closepar, ), 8], [arrow, =>, 8], [void, void, 8], 
[Opencubr, {, 9], 
[localvar, localvar, 10], [id, x, 10], [Colon, :, 10], [integer, integer, 10], [Opensqbr, [, 10], [intLit, 3, 10], [Closesqbr, ], 10], [Opensqbr, [, 10], [intLit, 2, 10], [Closesqbr, ], 10], [Semi, ;, 10], [inlinecmt,  1.1, 10], 
[localvar, localvar, 11], [id, y, 11], [Colon, :, 11], [integer, integer, 11], [Semi, ;, 11], [inlinecmt,  1.1, 11], 
[localvar, localvar, 12], [id, z, 12], [Colon, :, 12], [integer, integer, 12], [Semi, ;, 12], [inlinecmt,  1.1, 12], 
[id, x, 13], [assign, =, 13], [intLit, 1, 13], [Semi, ;, 13], 
[id, x, 14], [assign, =, 14], [id, y, 14], [Semi, ;, 14], 
[read, read, 15], [Openpar, (, 15], [id, x, 15], [Closepar, ), 15], [Semi, ;, 15], 
[inlinecmt,  y = 1 + 2 * 3;                                   // 3.1, 5.1, 16], 
[inlinecmt,  read(x);                                         // 3.4, 17], 
[inlinecmt,  if (x > y + 10)                                  // 3.2, 5.1   , 18], 
[inlinecmt,  then		, 19], 
[inlinecmt,    write(x+10);                                   // 3.4, 5.1 , 20], 
[inlinecmt, else, 21], 
[inlinecmt,    write(x+1);                                    // 3.4, 5.1, 22], 
[inlinecmt, ;, 23], 
[inlinecmt, z = 0;                                           // 3.1, 24], 
[inlinecmt,  while(z<=10) {                                   // 3.3, 5.1, 25], 
[inlinecmt,   write(z);                                      // 3.4, 26], 
[inlinecmt,   z = z + 1;                                     // 3.1, 27], 
[inlinecmt,  }; , 28], 
[Closecubr, }, 29], 