[Blockcmt,  sort the array *, 1], 
[function, function, 2], [id, bubbleSort, 2], [Openpar, (, 2], [id, arr, 2], [Colon, :, 2], [integer, integer, 2], [Opensqbr, [, 2], [Closesqbr, ], 2], [Comma, ,, 2], [id, size, 2], [Colon, :, 2], [integer, integer, 2], [Closepar, ), 2], [arrow, =>, 2], [void, void, 2], 
[Opencubr, {, 3], 
[localvar, localvar, 4], [id, n, 4], [Colon, :, 4], [integer, integer, 4], [Semi, ;, 4], 
[localvar, localvar, 5], [id, i, 5], [Colon, :, 5], [integer, integer, 5], [Semi, ;, 5], 
[localvar, localvar, 6], [id, j, 6], [Colon, :, 6], [integer, integer, 6], [Semi, ;, 6], 
[localvar, localvar, 7], [id, temp, 7], [Colon, :, 7], [integer, integer, 7], [Semi, ;, 7], 
[id, n, 8], [assign, =, 8], [id, size, 8], [Semi, ;, 8], 
[id, i, 9], [assign, =, 9], [intLit, 0, 9], [Semi, ;, 9], 
[id, j, 10], [assign, =, 10], [intLit, 0, 10], [Semi, ;, 10], 
[id, temp, 11], [assign, =, 11], [intLit, 0, 11], [Semi, ;, 11], 
[while, while, 12], [Openpar, (, 12], [id, i, 12], [Lt, <, 12], [id, n, 12], [Minus, -, 12], [intLit, 1, 12], [Closepar, ), 12], [Opencubr, {, 12], 
[while, while, 13], [Openpar, (, 13], [id, j, 13], [Lt, <, 13], [id, n, 13], [Minus, -, 13], [id, i, 13], [Minus, -, 13], [intLit, 1, 13], [Closepar, ), 13], [Opencubr, {, 13], 
[if, if, 14], [Openpar, (, 14], [id, arr, 14], [Opensqbr, [, 14], [id, j, 14], [Closesqbr, ], 14], [gt, >, 14], [id, arr, 14], [Opensqbr, [, 14], [id, j, 14], [Plus, +, 14], [intLit, 1, 14], [Closesqbr, ], 14], [Closepar, ), 14], 
[then, then, 15], [Opencubr, {, 15], 
[inlinecmt,  swap temp and arr[i], 16], 
[id, temp, 17], [assign, =, 17], [id, arr, 17], [Opensqbr, [, 17], [id, j, 17], [Closesqbr, ], 17], [Semi, ;, 17], 
[id, arr, 18], [Opensqbr, [, 18], [id, j, 18], [Closesqbr, ], 18], [assign, =, 18], [id, arr, 18], [Opensqbr, [, 18], [id, j, 18], [Plus, +, 18], [intLit, 1, 18], [Closesqbr, ], 18], [Semi, ;, 18], 
[id, arr, 19], [Opensqbr, [, 19], [id, j, 19], [Plus, +, 19], [intLit, 1, 19], [Closesqbr, ], 19], [assign, =, 19], [id, temp, 19], [Semi, ;, 19], 
[Closecubr, }, 20], [else, else, 20], [Semi, ;, 20], 
[id, j, 21], [assign, =, 21], [id, j, 21], [Plus, +, 21], [intLit, 1, 21], [Semi, ;, 21], 
[Closecubr, }, 22], [Semi, ;, 22], 
[id, i, 23], [assign, =, 23], [id, i, 23], [Plus, +, 23], [intLit, 1, 23], [Semi, ;, 23], 
[Closecubr, }, 24], [Semi, ;, 24], 
[Closecubr, }, 25], 
[Blockcmt,  print the array *, 27], 
[function, function, 28], [id, printArray, 28], [Openpar, (, 28], [id, arr, 28], [Colon, :, 28], [integer, integer, 28], [Opensqbr, [, 28], [Closesqbr, ], 28], [Comma, ,, 28], [id, size, 28], [Colon, :, 28], [integer, integer, 28], [Closepar, ), 28], [arrow, =>, 28], [void, void, 28], 
[Opencubr, {, 29], 
[localvar, localvar, 30], [id, n, 30], [Colon, :, 30], [integer, integer, 30], [Semi, ;, 30], 
[localvar, localvar, 31], [id, i, 31], [Colon, :, 31], [integer, integer, 31], [Semi, ;, 31], 
[id, n, 32], [assign, =, 32], [id, size, 32], [Semi, ;, 32], 
[id, i, 33], [assign, =, 33], [intLit, 0, 33], [Semi, ;, 33], 
[while, while, 34], [Openpar, (, 34], [id, i, 34], [Lt, <, 34], [id, n, 34], [Closepar, ), 34], [Opencubr, {, 34], 
[write, write, 35], [Openpar, (, 35], [id, arr, 35], [Opensqbr, [, 35], [id, i, 35], [Closesqbr, ], 35], [Closepar, ), 35], [Semi, ;, 35], 
[id, i, 36], [assign, =, 36], [id, i, 36], [Plus, +, 36], [intLit, 1, 36], [Semi, ;, 36], 
[Closecubr, }, 37], [Semi, ;, 37], 
[Closecubr, }, 38], 
[inlinecmt,  main funtion to test above, 40], 
[function, function, 41], [id, main, 41], [Openpar, (, 41], [Closepar, ), 41], [arrow, =>, 41], [void, void, 41], 
[Opencubr, {, 42], 
[localvar, localvar, 43], [id, arr, 43], [Colon, :, 43], [integer, integer, 43], [Opensqbr, [, 43], [intLit, 7, 43], [Closesqbr, ], 43], [Semi, ;, 43], 
[id, arr, 44], [Opensqbr, [, 44], [intLit, 0, 44], [Closesqbr, ], 44], [assign, =, 44], [intLit, 64, 44], [Semi, ;, 44], 
[id, arr, 45], [Opensqbr, [, 45], [intLit, 1, 45], [Closesqbr, ], 45], [assign, =, 45], [intLit, 34, 45], [Semi, ;, 45], 
[id, arr, 46], [Opensqbr, [, 46], [intLit, 2, 46], [Closesqbr, ], 46], [assign, =, 46], [intLit, 25, 46], [Semi, ;, 46], 
[id, arr, 47], [Opensqbr, [, 47], [intLit, 3, 47], [Closesqbr, ], 47], [assign, =, 47], [intLit, 12, 47], [Semi, ;, 47], 
[id, arr, 48], [Opensqbr, [, 48], [intLit, 4, 48], [Closesqbr, ], 48], [assign, =, 48], [intLit, 22, 48], [Semi, ;, 48], 
[id, arr, 49], [Opensqbr, [, 49], [intLit, 5, 49], [Closesqbr, ], 49], [assign, =, 49], [intLit, 11, 49], [Semi, ;, 49], 
[id, arr, 50], [Opensqbr, [, 50], [intLit, 6, 50], [Closesqbr, ], 50], [assign, =, 50], [intLit, 90, 50], [Semi, ;, 50], 
[id, printarray, 51], [Openpar, (, 51], [id, arr, 51], [Comma, ,, 51], [intLit, 7, 51], [Closepar, ), 51], [Semi, ;, 51], 
[id, bubbleSort, 52], [Openpar, (, 52], [id, arr, 52], [Comma, ,, 52], [intLit, 7, 52], [Closepar, ), 52], [Semi, ;, 52], 
[id, printarray, 53], [Openpar, (, 53], [id, arr, 53], [Comma, ,, 53], [intLit, 7, 53], [Closepar, ), 53], [Semi, ;, 53], 
[Closecubr, }, 54], 
[Blockcmt,     classes    --------------------------------------|X| no class declaration| | class declaration| | multiple class declarations| | no data member declaration| | data member declaration| | multiple data member declaration| | no member function declaration| | member function declaration| | multiple member function declaration| | no member| | no inherited class| | one inherited class| | multiple inherited classes| | private member specifier| | public member specifier    functions: definitions    --------------------------------------| | no main function definition|X| main function definition| | no free function definition|X| free function definition|X| multiple free function definitions|X| no member function definition| | member function definition| | multiple member function definitions|X| return type: void| | return type: integer| | return type: float| | return type: id| | return type: array (not allowed)    functions: formal parameters    --------------------------------------|X| type: integer| | type: float| | type: id|X| type: 1-dim array | | type: n-dim array| | type: array (with size)|X| type: array (without size)    functions: calls    --------------------------------------|X| free function call| | member function call| | parameters:0| | parameters:1|X| parameters:n|X| array parameter - 1-dim| | array parameter - n-dim| | array parameter - with size| | array parameter - without size| | function call as statement| | function call as expression factor| | expression as parameter    variable declaration    --------------------------------------|X| type: integer| | type: float| | type: string| | type: id|X| type: 1-dim array | | type: n-dim array|X| type: array (with size)| | type: array (without size) (not allowed)    function body: local variable declarations    --------------------------------------| | no local variable declarations|X| local variable declarations| | intertwined statements and variable declarations    function body: statements    --------------------------------------| | no statement| | 1 statement|X| n statements|X| if statement|X| if: empty then or else blocks| | if: 1-statement then or else blocks|X| if: n-statements then or else blocks|X| while statement| | while: empty block| | while: 1-statement block|X| while: n-statement block| | read(<variable>) statement|X| write(<expr>) statement|X| return(<expr>) statement|X| assignment statement    variable + idnest    --------------------------------------|X| id| | id.id| | id.id(id)| | id(id).id| | id(id).id()| | id.id[id]| | id[id].id| | id[id].id[id]| | id.id[id][id]| | id[id][id].id| | id[id][id].id[id][id]| | id(id).id[id]| | id(id).id[id][id]| | expression as array index    expressions    --------------------------------------|X| single variable|X| involving addop| | involving multop|X| involving relop| | involving addop + multop|X| involving multop + relop| | involving addop + multop + relop| | involving parentheses| | involving nested parentheses| | involving not| | involving sign|X| involving literals| | involving variable + idnest|X| involving function calls| | involving all the above in one expression*, 56], 