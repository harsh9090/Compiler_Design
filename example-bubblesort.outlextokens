[Blockcmt,  sort the array *, 1], 
[function, function, 2], [id, bubbleSort, 2], [Openpar, (, 2], [id, arr, 2], [Colon, :, 2], [integer, integer, 2], [Opensqbr, [, 2], [intLit, 7, 2], [Closesqbr, ], 2], [Comma, ,, 2], [id, size, 2], [Colon, :, 2], [integer, integer, 2], [Closepar, ), 2], [arrow, =>, 2], [void, void, 2], 
[Opencubr, {, 3], 
[localvar, localvar, 4], [id, n, 4], [Colon, :, 4], [integer, integer, 4], [Semi, ;, 4], 
[localvar, localvar, 5], [id, i, 5], [Colon, :, 5], [integer, integer, 5], [Semi, ;, 5], 
[localvar, localvar, 6], [id, j, 6], [Colon, :, 6], [integer, integer, 6], [Semi, ;, 6], 
[localvar, localvar, 7], [id, temp, 7], [Colon, :, 7], [integer, integer, 7], [Semi, ;, 7], 
[id, n, 8], [assign, =, 8], [id, size, 8], [Semi, ;, 8], 
[id, i, 9], [assign, =, 9], [intLit, 0, 9], [Semi, ;, 9], 
[id, j, 10], [assign, =, 10], [intLit, 0, 10], [Semi, ;, 10], 
[id, temp, 11], [assign, =, 11], [intLit, 0, 11], [Semi, ;, 11], 
[while, while, 12], [Openpar, (, 12], [id, i, 12], [Lt, <, 12], [id, n, 12], [Minus, -, 12], [intLit, 1, 12], [Closepar, ), 12], [Opencubr, {, 12], 
[id, j, 13], [assign, =, 13], [intLit, 0, 13], [Semi, ;, 13], 
[while, while, 14], [Openpar, (, 14], [id, j, 14], [Lt, <, 14], [id, n, 14], [Minus, -, 14], [id, i, 14], [Minus, -, 14], [intLit, 1, 14], [Closepar, ), 14], [Opencubr, {, 14], 
[if, if, 15], [Openpar, (, 15], [id, arr, 15], [Opensqbr, [, 15], [id, j, 15], [Closesqbr, ], 15], [gt, >, 15], [id, arr, 15], [Opensqbr, [, 15], [id, j, 15], [Plus, +, 15], [intLit, 1, 15], [Closesqbr, ], 15], [Closepar, ), 15], 
[then, then, 16], [Opencubr, {, 16], 
[inlinecmt,  swap temp and arr[i], 17], 
[id, temp, 18], [assign, =, 18], [id, arr, 18], [Opensqbr, [, 18], [id, j, 18], [Closesqbr, ], 18], [Semi, ;, 18], 
[id, arr, 19], [Opensqbr, [, 19], [id, j, 19], [Closesqbr, ], 19], [assign, =, 19], [id, arr, 19], [Opensqbr, [, 19], [id, j, 19], [Plus, +, 19], [intLit, 1, 19], [Closesqbr, ], 19], [Semi, ;, 19], 
[id, arr, 20], [Opensqbr, [, 20], [id, j, 20], [Plus, +, 20], [intLit, 1, 20], [Closesqbr, ], 20], [assign, =, 20], [id, temp, 20], [Semi, ;, 20], 
[Closecubr, }, 21], [else, else, 21], [Semi, ;, 21], 
[id, j, 22], [assign, =, 22], [id, j, 22], [Plus, +, 22], [intLit, 1, 22], [Semi, ;, 22], 
[Closecubr, }, 23], [Semi, ;, 23], 
[id, i, 24], [assign, =, 24], [id, i, 24], [Plus, +, 24], [intLit, 1, 24], [Semi, ;, 24], 
[Closecubr, }, 25], [Semi, ;, 25], 
[Closecubr, }, 26], 
[Blockcmt,  print the array *, 28], 
[function, function, 29], [id, printArray, 29], [Openpar, (, 29], [id, arr, 29], [Colon, :, 29], [integer, integer, 29], [Opensqbr, [, 29], [intLit, 7, 29], [Closesqbr, ], 29], [Comma, ,, 29], [id, size, 29], [Colon, :, 29], [integer, integer, 29], [Closepar, ), 29], [arrow, =>, 29], [void, void, 29], 
[Opencubr, {, 30], 
[localvar, localvar, 31], [id, n, 31], [Colon, :, 31], [integer, integer, 31], [Semi, ;, 31], 
[localvar, localvar, 32], [id, i, 32], [Colon, :, 32], [integer, integer, 32], [Semi, ;, 32], 
[id, n, 33], [assign, =, 33], [id, size, 33], [Semi, ;, 33], 
[id, i, 34], [assign, =, 34], [intLit, 0, 34], [Semi, ;, 34], 
[while, while, 35], [Openpar, (, 35], [id, i, 35], [Lt, <, 35], [id, n, 35], [Closepar, ), 35], [Opencubr, {, 35], 
[write, write, 36], [Openpar, (, 36], [id, arr, 36], [Opensqbr, [, 36], [id, i, 36], [Closesqbr, ], 36], [Closepar, ), 36], [Semi, ;, 36], 
[id, i, 37], [assign, =, 37], [id, i, 37], [Plus, +, 37], [intLit, 1, 37], [Semi, ;, 37], 
[Closecubr, }, 38], [Semi, ;, 38], 
[Closecubr, }, 39], 
[inlinecmt,  main funtion to test above, 41], 
[function, function, 42], [id, main, 42], [Openpar, (, 42], [Closepar, ), 42], [arrow, =>, 42], [void, void, 42], 
[Opencubr, {, 43], 
[localvar, localvar, 44], [id, arr, 44], [Colon, :, 44], [integer, integer, 44], [Opensqbr, [, 44], [intLit, 7, 44], [Closesqbr, ], 44], [Semi, ;, 44], 
[id, arr, 45], [Opensqbr, [, 45], [intLit, 0, 45], [Closesqbr, ], 45], [assign, =, 45], [intLit, 64, 45], [Semi, ;, 45], 
[id, arr, 46], [Opensqbr, [, 46], [intLit, 1, 46], [Closesqbr, ], 46], [assign, =, 46], [intLit, 34, 46], [Semi, ;, 46], 
[id, arr, 47], [Opensqbr, [, 47], [intLit, 2, 47], [Closesqbr, ], 47], [assign, =, 47], [intLit, 25, 47], [Semi, ;, 47], 
[id, arr, 48], [Opensqbr, [, 48], [intLit, 3, 48], [Closesqbr, ], 48], [assign, =, 48], [intLit, 12, 48], [Semi, ;, 48], 
[id, arr, 49], [Opensqbr, [, 49], [intLit, 4, 49], [Closesqbr, ], 49], [assign, =, 49], [intLit, 22, 49], [Semi, ;, 49], 
[id, arr, 50], [Opensqbr, [, 50], [intLit, 5, 50], [Closesqbr, ], 50], [assign, =, 50], [intLit, 11, 50], [Semi, ;, 50], 
[id, arr, 51], [Opensqbr, [, 51], [intLit, 6, 51], [Closesqbr, ], 51], [assign, =, 51], [intLit, 90, 51], [Semi, ;, 51], 
[id, printArray, 52], [Openpar, (, 52], [id, arr, 52], [Opensqbr, [, 52], [intLit, 7, 52], [Closesqbr, ], 52], [Comma, ,, 52], [intLit, 7, 52], [Closepar, ), 52], [Semi, ;, 52], 
[id, bubbleSort, 53], [Openpar, (, 53], [id, arr, 53], [Opensqbr, [, 53], [intLit, 7, 53], [Closesqbr, ], 53], [Comma, ,, 53], [intLit, 7, 53], [Closepar, ), 53], [Semi, ;, 53], 
[id, printArray, 54], [Openpar, (, 54], [id, arr, 54], [Opensqbr, [, 54], [intLit, 7, 54], [Closesqbr, ], 54], [Comma, ,, 54], [intLit, 7, 54], [Closepar, ), 54], [Semi, ;, 54], 
[Closecubr, }, 55], 
[Blockcmt,     classes    --------------------------------------|X| no class declaration| | class declaration| | multiple class declarations| | no data member declaration| | data member declaration| | multiple data member declaration| | no member function declaration| | member function declaration| | multiple member function declaration| | no member| | no inherited class| | one inherited class| | multiple inherited classes| | private member specifier| | public member specifier    functions: definitions    --------------------------------------| | no main function definition|X| main function definition| | no free function definition|X| free function definition|X| multiple free function definitions|X| no member function definition| | member function definition| | multiple member function definitions|X| return type: void| | return type: integer| | return type: float| | return type: id| | return type: array (not allowed)    functions: formal parameters    --------------------------------------|X| type: integer| | type: float| | type: id|X| type: 1-dim array | | type: n-dim array| | type: array (with size)|X| type: array (without size)    functions: calls    --------------------------------------|X| free function call| | member function call| | parameters:0| | parameters:1|X| parameters:n|X| array parameter - 1-dim| | array parameter - n-dim| | array parameter - with size| | array parameter - without size| | function call as statement| | function call as expression factor| | expression as parameter    variable declaration    --------------------------------------|X| type: integer| | type: float| | type: string| | type: id|X| type: 1-dim array | | type: n-dim array|X| type: array (with size)| | type: array (without size) (not allowed)    function body: local variable declarations    --------------------------------------| | no local variable declarations|X| local variable declarations| | intertwined statements and variable declarations    function body: statements    --------------------------------------| | no statement| | 1 statement|X| n statements|X| if statement|X| if: empty then or else blocks| | if: 1-statement then or else blocks|X| if: n-statements then or else blocks|X| while statement| | while: empty block| | while: 1-statement block|X| while: n-statement block| | read(<variable>) statement|X| write(<expr>) statement|X| return(<expr>) statement|X| assignment statement    variable + idnest    --------------------------------------|X| id| | id.id| | id.id(id)| | id(id).id| | id(id).id()| | id.id[id]| | id[id].id| | id[id].id[id]| | id.id[id][id]| | id[id][id].id| | id[id][id].id[id][id]| | id(id).id[id]| | id(id).id[id][id]| | expression as array index    expressions    --------------------------------------|X| single variable|X| involving addop| | involving multop|X| involving relop| | involving addop + multop|X| involving multop + relop| | involving addop + multop + relop| | involving parentheses| | involving nested parentheses| | involving not| | involving sign|X| involving literals| | involving variable + idnest|X| involving function calls| | involving all the above in one expression*, 57], 